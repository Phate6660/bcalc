#!/bin/bash
## Tests for bcalc

## Common variables used for the tests.
exe="./bcalc"

## Basic math operations.
# Basic parenthesis test.
basic_paren() {
    # Local to keep them in the function.
    local expected="4"
    local command="$exe '(1+1)*2'"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basic_paren_test="GOOD -- The basic parenthesis test has passed."
    else
        basic_paren_test="BAD -- The result of the basic parenthesis test is \"${result}\", when it should be \"${expected}\"."
    fi
}

# Basic exponent test.
basic_expon() {
    local expected="16"
    local command="$exe 4^2"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basic_expon_test="GOOD -- The basic exponent test has passed."
    else
        basic_expon_test="BAD -- The result of the basic exponent test is \"${result}\", when it should be \"${expected}\"."
    fi
}

# Basic multiplication test.
basic_multi() {
    local expected="32"
    local command="$exe 16*2"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basic_multi_test="GOOD -- The basic multiplication test has passed."
    else
        basic_multi_test="BAD -- The result of the basic multiplication test is \"${result}\", when it should be \"${expected}\"."
    fi
}

# Basic division test.
basic_divis() {
    local expected="64"
    local command="$exe 128/2"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basic_divis_test="GOOD -- The basic division test has passed."
    else
        basic_divis_test="BAD -- The result of the basic division test is \"${result}\", when it should be \"${expected}\"."
    fi
}

# Basic addition test.
basic_addit() {
    local expected="128"
    local command="$exe 64+64"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basic_addit_test="GOOD -- The basic addition test has passed."
    else
        basic_addit_test="BAD -- The result of the basic addition test is \"${result}\", when it should be \"${expected}\"."
    fi
}

# Basic subtraction test.
basic_subtr() {
    local expected="256"
    local command="$exe 384-128"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basic_subtr_test="GOOD -- The basic subtraction test has passed."
    else
        basic_subtr_test="BAD -- The result of the basic subtraction test is \"${result}\", when it should be \"${expected}\"."
    fi
}

## PEMDAS tests.
# Basic PEMDAS test.
basi_pemdas() {
    local expected="512"
    local command="$exe '(1256-500+500)*(1+1)'"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        basi_pemdas_test="GOOD -- The basic PEMDAS test has passed."
    else
        basi_pemdas_test="BAD -- The result of the basic PEMDAS test is \"${result}\", when it should be \"${expected}\"."
    fi
}

# Basic PEMDAS test 2.
bas_pemdas2() {
    local expected="1024"
    local command="$exe '(1256-500+500)*(1+1)*2'"
    local result="$(eval "${command}")"
    
    if [ "${result}" == "${expected}" ]; then
        bas_pemdas2_test="GOOD -- The second basic PEMDAS test has passed."
    else
        bas_pemdas2_test="BAD -- The result of the secpmd basic PEMDAS test is \"${result}\", when it should be \"${expected}\"."
    fi
}

## Run the tests.
basic_paren && echo "${basic_paren_test}"
basic_expon && echo "${basic_expon_test}"
basic_multi && echo "${basic_multi_test}"
basic_divis && echo "${basic_divis_test}"
basic_addit && echo "${basic_addit_test}"
basic_subtr && echo "${basic_subtr_test}"
basi_pemdas && echo "${basi_pemdas_test}"
bas_pemdas2 && echo "${bas_pemdas2_test}"
