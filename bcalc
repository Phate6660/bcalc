#!/bin/bash
## A calculator in pure-bash.
## I even made a pure-bash lexer for this.
## Not gonna lie I feel pretty accomplished right now.
## ---------------------------------------------------
## Created by: Phate6660 [https://github.com/Phate6660]
## Dependencies: Only bash ;)

# Get the first arg (since that's all we need), and add a space betweem each character.
args="$1"
for ((i=0; i<${#args}; i++)); do
    args_spaces+="${args:$i:1} "
done

# Read each space-separated character into the array.
# shellcheck disable=SC2162
read -a args_array <<< "$args_spaces"

# Iterate over the argument array.
for i in "${args_array[@]}"; do
    # Check if "$i" is a number, and if so...
    if [[ "$i" =~ ^[0-9]+$ ]]; then
        # If "$op" is set, continue and skip appending to n1_array.
        if [ -n "$op" ]; then
            if [ -n "$op2" ]; then
                n3_array+=("$i")
            else 
                n2_array+=("$i")
            fi
        else
            # Otherwise append the number to the array.
            n1_array+=("$i")
        fi
    fi
    # Check if "$i" is a math operation, and if so, set the "$op" var to it.
    if [ "$i" == "*" ] || [ "$i" == "/" ] || [ "$i" == "+" ] || [ "$i" == "-" ]; then
        if [ -n "$op" ]; then
            op2="$i"
        fi
        op="$i"
    fi
done

# The _pre variables contain all the elements of the respective number arrays.
# Then {n1,n2} are the contents of the _pre variables with the spaces removed.
n1_pre="${n1_array[*]}"
n1="${n1_pre// /}"
n2_pre="${n2_array[*]}"
n2="${n2_pre// /}"
if [ -n "${n3_array[0]}" ]; then
    n3_pre="${n3_array[*]}"
    n3="${n3_pre// /}"
fi

if [ -n "$n3" ]; then
    echo $(("$n1" "$op" "$n2" "$op2" "$n3"))
else
    echo $(("$n1" "$op" "$n2"))
fi
